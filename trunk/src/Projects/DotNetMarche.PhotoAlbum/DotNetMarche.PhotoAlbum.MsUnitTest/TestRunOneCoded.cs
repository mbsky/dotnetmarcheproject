//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DotNetMarche.PhotoAlbum.MsUnitTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class TestRunOneCoded : WebTest
    {

        public TestRunOneCoded()
        {
            this.PreAuthenticate = true;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://localhost:13164/Photo/PhotoAlbumManager.aspx");
            request1.ThinkTime = 5;
            request1.ExpectedResponseUrl = "http://localhost:13164/Login.aspx?ReturnUrl=%2fPhoto%2fPhotoAlbumManager.aspx";
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:13164/Login.aspx");
            request2.ThinkTime = 2;
            request2.Method = "POST";
            request2.ExpectedResponseUrl = "http://localhost:13164/Photo/PhotoAlbumManager.aspx";
            request2.QueryStringParameters.Add("ReturnUrl", "%2fPhoto%2fPhotoAlbumManager.aspx", false, false);
            FormPostHttpBody request2Body = new FormPostHttpBody();
            request2Body.FormPostParameters.Add("__EVENTTARGET", this.Context["$HIDDEN1.__EVENTTARGET"].ToString());
            request2Body.FormPostParameters.Add("__EVENTARGUMENT", this.Context["$HIDDEN1.__EVENTARGUMENT"].ToString());
            request2Body.FormPostParameters.Add("__VIEWSTATE", this.Context["$HIDDEN1.__VIEWSTATE"].ToString());
            request2Body.FormPostParameters.Add("__EVENTVALIDATION", this.Context["$HIDDEN1.__EVENTVALIDATION"].ToString());
            request2Body.FormPostParameters.Add("Login1$UserName", "alkampfer");
            request2Body.FormPostParameters.Add("Login1$Password", "12345");
            request2Body.FormPostParameters.Add("Login1$LoginButton", "Log In");
            request2.Body = request2Body;
            ExtractHiddenFields extractionRule2 = new ExtractHiddenFields();
            extractionRule2.Required = true;
            extractionRule2.HtmlDecode = true;
            extractionRule2.ContextParameterName = "1";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            ExtractAttributeValue extractionRule3 = new ExtractAttributeValue();
            extractionRule3.TagName = "a";
            extractionRule3.AttributeName = "href";
            extractionRule3.MatchAttributeName = "";
            extractionRule3.MatchAttributeValue = "";
            extractionRule3.HtmlDecode = true;
            extractionRule3.Required = true;
            extractionRule3.Index = 0;
            extractionRule3.ContextParameterName = "";
            extractionRule3.ContextParameterName = "Ext";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule3.Extract);
            yield return request2;
            //now we have finished request2 so we can access the context
            Assert.IsNotNull(this.Context["Ext"]);
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://localhost:13164/Photo/PhotoAlbumManager.aspx");
            request3.Method = "POST";
            FormPostHttpBody request3Body = new FormPostHttpBody();
            request3Body.FormPostParameters.Add("__EVENTTARGET", this.Context["$HIDDEN1.__EVENTTARGET"].ToString());
            request3Body.FormPostParameters.Add("__EVENTARGUMENT", this.Context["$HIDDEN1.__EVENTARGUMENT"].ToString());
            request3Body.FormPostParameters.Add("__VIEWSTATE", this.Context["$HIDDEN1.__VIEWSTATE"].ToString());
            request3Body.FormPostParameters.Add("__VIEWSTATEENCRYPTED", this.Context["$HIDDEN1.__VIEWSTATEENCRYPTED"].ToString());
            request3Body.FormPostParameters.Add("__EVENTVALIDATION", this.Context["$HIDDEN1.__EVENTVALIDATION"].ToString());
            request3Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$PhotoAlbumManager1$grdPhotoAlbum$ctl04$Button1", "Select");
            request3Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$PhotoAlbumManager1$txtNameForNewElement", "");
            request3Body.FormPostParameters.Add("ctl00$ContentPlaceHolder1$PhotoAlbumManager1$txtdescriptionForNewElement", "");
            request3.Body = request3Body;
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule2 = new ValidationRuleFindText();
                validationRule2.FindText = "Gli occhietti si chiudono..!!!";
                validationRule2.IgnoreCase = true;
                validationRule2.UseRegularExpression = false;
                validationRule2.PassIfTextFound = true;
                request3.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }
            yield return request3;
            request3 = null;
        }
    }
}
